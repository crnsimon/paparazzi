from numpy import array
import os
import cv2
import matplotlib.pyplot as plt
import numpy as np

# y = Ax + B : A is the slope, B is the y-intercept : A = popt[0], B = popt[1]
popt_left_all = [array([ -0.34170103, 232.90071473]), array([ -0.33480946, 231.18852309]), array([ -0.33961414, 233.47060948]), array([ -0.34300931, 239.38352574]), array([ -0.34980048, 238.76683398]), array([ -0.35122252, 241.63514981]), array([ -0.36907592, 248.94205377]), array([ -0.38435794, 253.84005636]), array([ -0.36935233, 264.67312758]), array([ -0.39229164, 296.67202651]), array([ -0.38133313, 279.3269009 ]), array([ -0.36811139, 269.43008438]), array([ -0.33826654, 262.82313723]), array([ -0.3528408 , 262.93644325]), array([ -0.36871196, 264.49115069]), array([ -0.37614749, 269.03068878]), array([ -0.39321179, 270.44683506]), array([ -0.34131401, 236.59440457]), array([ -0.26609182, 199.6163339 ]), array([ -0.21616651, 172.1778538 ]), array([ -0.20402683, 150.38221355]), array([ -0.13960735, 126.42356494]), array([ -0.13524118, 128.23630063]), array([ -0.13917422, 127.84911886]), array([-1.26209982e-01,  1.27736272e+02]), array([ -0.12960231, 124.7102309 ]), array([ -0.13221496, 126.37116172]), array([ -0.13032627, 128.64102458]), array([ -0.1289895 , 128.72092643]), array([ -0.12981349, 128.55419639]), array([-3.89006341e-02,  1.20248496e+02]), array([-4.56802793e-02,  1.19942943e+02]), array([-3.71908416e-02,  1.18931826e+02]), array([-4.69424204e-02,  1.18437965e+02]), array([-5.59753359e-02,  1.24990308e+02]), array([-4.11163187e-02,  1.21608315e+02]), array([-4.24162544e-02,  1.23307796e+02]), array([-3.80457674e-02,  1.22168983e+02]), array([-2.74116866e-02,  1.17668156e+02]), array([-6.55559037e-02,  1.26867065e+02]), array([-2.49991891e-02,  1.20230148e+02]), array([-3.53958647e-02,  1.21807086e+02]), array([-2.93932706e-02,  1.23596363e+02]), array([-1.58584723e-01,  1.73435516e+02]), array([ -0.22631778, 204.21239157]), array([ -0.25112807, 222.70363117]), array([ -0.20363109, 194.54245534]), array([ -0.19350718, 185.75204896]), array([ -0.19230703, 187.18739988]), array([ -0.21025243, 198.09622558]), array([ -0.23033648, 207.97556258]), array([ -0.23257534, 212.33971237]), array([ -0.25086177, 215.83690327]), array([ -0.25849435, 222.00622012]), array([ -0.33219104, 205.35307311]), array([ -0.32294846, 225.37018631]), array([ -0.34067345, 233.67776747]), array([ -0.32968157, 235.35130003]), array([ -0.33207537, 241.94385358]), array([ -0.35041314, 248.68664717]), array([ -0.37232423, 260.18493164]), array([ -0.36478055, 264.2076564 ]), array([ -0.37566152, 270.44799733]), array([ -0.37059312, 277.16677878]), array([ -0.45694337, 298.31264546]), array([ -0.44614599, 304.17151576])]
popt_right_all = [array([1.22810996e-01, 1.28902051e+02]), array([  0.12820207, 125.15212536]), array([  0.12833865, 128.33572178]), array([  0.13692405, 129.16503209]), array([  0.13348767, 133.18075988]), array([  0.14499491, 132.62681638]), array([  0.1586551 , 136.24168707]), array([  0.17374555, 133.68326347]), array([  0.16756466, 148.47624774]), array([1.44451346e-01, 1.84354925e+02]), array([1.64720332e-01, 1.65845788e+02]), array([  0.17161244, 162.29659965]), array([  0.17381077, 157.65306813]), array([  0.17384042, 153.66329233]), array([  0.17943356, 154.11452555]), array([1.56792834e-01, 1.57196361e+02]), array([1.50872176e-01, 1.58282237e+02]), array([  0.14485291, 132.30876681]), array([1.01836975e-01, 1.20250203e+02]), array([8.68736933e-02, 1.08320807e+02]), array([5.61043591e-02, 9.89671880e+01]), array([ 0.08184988, 81.13346406]), array([ 0.08701307, 79.09287535]), array([ 0.09508321, 77.60913298]), array([ 0.09509742, 77.55824935]), array([ 0.08556293, 82.20969354]), array([ 0.09348555, 77.45454969]), array([8.1504805e-02, 8.3504424e+01]), array([6.86746885e-02, 8.63579444e+01]), array([7.56880933e-02, 8.32595495e+01]), array([0.23129921, 9.02854335]), array([  0.28167282, -15.12792128]), array([ 0.1264066 , 56.95967722]), array([0.23933902, 7.26066098]), array([ 0.17859746, 34.05015308]), array([ 0.20515797, 21.69093623]), array([ 0.21311475, 18.45081967]), array([ 0.15865113, 41.53977594]), array([ 0.1821954 , 32.68389287]), array([  0.30915996, -26.36911113]), array([ 0.24517375, -0.30051608]), array([ 0.18889004, 27.74833714]), array([ 0.2248062 , 17.79844961]), array([ 0.2715977 , 26.13192533]), array([ 0.17312922, 93.82067406]), array([ 0.17577269, 98.23783428]), array([ 0.14758688, 97.84372434]), array([ 0.1599106 , 85.43130846]), array([ 0.13460954, 93.7303044 ]), array([ 0.17084878, 87.510876  ]), array([ 0.20322679, 81.04261539]), array([ 0.18740947, 93.47274257]), array([  0.16161207, 103.11568862]), array([ 0.19898682, 92.58327658]), array([ 0.20683488, 73.26839239]), array([  0.14545858, 114.71562445]), array([  0.14740556, 119.19028753]), array([1.02457565e-01, 1.35615241e+02]), array([  0.14494991, 127.66138795]), array([  0.15016022, 128.73922792]), array([  0.16559228, 131.89238057]), array([  0.17464642, 134.84378083]), array([  0.22134519, 126.64952114]), array([  0.20124014, 138.70880977]), array([  0.22674663, 136.38175694]), array([  0.2317289 , 151.73355736])]

# Image path
images_path = r"C:\Users\Jonathan van Zyl\Documents\GitHub\paparazzi\Data_gitignore\AE4317_2019_datasets\cyberzoo_poles_panels\20190121-140205"
file_path = "Data_gitignore/AE4317_2019_datasets/cyberzoo_poles_panels/20190121-140303.csv"
frame_files = sorted(os.listdir(images_path))

no_images = len(frame_files)
max_iters = 100
steps_between_image = int(no_images/max_iters)
stop_iter = steps_between_image*max_iters
print(0, stop_iter, steps_between_image)

popt_left_good = []
popt_right_good = []
popt_left_bad = []
popt_right_bad = []


# Image good
image_name_good = []
# Image bad
image_name_bad = []


def on_key(event):
    global popt_left_good, popt_right_good, popt_left_bad, popt_right_bad, image_name_good, image_name_bad
    print('you pressed', event.key)
    if event.key == 'a':
        popt_left_good.append(popt_left.tolist())  # Append popt_left as a list
        popt_right_good.append(popt_right.tolist())
        image_name_good.append(frame_files[i])
        print('Good')
        plt.close()
    elif event.key == 'd':
        popt_left_bad.append(popt_left.tolist())  # Append popt_left as a list
        popt_right_bad.append(popt_right.tolist())
        image_name_bad.append(frame_files[i])
        print('Bad')
        plt.close()
    else:
        print('Invalid key')

j = 0
for i in range(0, stop_iter, steps_between_image):
    if j == len(popt_left_all):
        break

    clicked_points_left = []
    clicked_points_right = []
    image_path = os.path.join(images_path, frame_files[i])
    img = cv2.imread(image_path)
    img = cv2.rotate(img, cv2.ROTATE_90_COUNTERCLOCKWISE)
    #Plot the lines from the popt_left_all and popt_right_all on the image
    popt_left = popt_left_all[j]
    popt_right = popt_right_all[j]

    # Convert to numpy array
    popt_left = np.array(popt_left)
    popt_right = np.array(popt_right)

    print(popt_left, popt_right)
    # Plot the lines
    x = range(0, img.shape[1])
    y_left = popt_left[0]*x + popt_left[1]
    y_right = popt_right[0]*x + popt_right[1]

    # Connect the event to the figure
    fig = plt.figure()
    fig.canvas.mpl_connect('key_press_event', on_key)

    plt.plot(x, y_left, 'r-', label='left')
    plt.plot(x, y_right, 'g-', label='right')
    plt.imshow(img)
    plt.legend()
    plt.show()

        
    print('popt_left_good', popt_left_good)
    print('popt_right_good', popt_right_good)
    j += 1

print('popt_left_good FINAL', popt_left_good)
print('popt_right_good FINAL', popt_right_good)
print('image name good', image_name_good)
print('image name bad', image_name_bad)


'''
popt_left_good_FINAL = np.array([[-0.34170103, 232.90071473], [-0.33480946, 231.18852309], [-0.33961414, 233.47060948], [-0.34300931, 239.38352574], [-0.34980048, 238.76683398], [-0.35122252, 241.63514981], [-0.36907592, 248.94205377], [-0.38435794, 253.84005636], [-0.36935233, 264.67312758], [-0.39229164, 296.67202651], [-0.38133313, 279.3269009], [-0.36811139, 269.43008438], [-0.33826654, 262.82313723], [-0.3528408, 262.93644325], [-0.36871196, 264.49115069], [-0.37614749, 269.03068878], [-0.39321179, 270.44683506], [-0.34131401, 236.59440457], [-0.26609182, 199.6163339], [-0.21616651, 172.1778538], [-0.20402683, 150.38221355], [-0.13960735, 126.42356494], [-0.13524118, 128.23630063], [-0.13917422, 127.84911886], [-0.126209982, 127.736272], [-0.12960231, 124.7102309], [-0.13221496, 126.37116172], [-0.13032627, 128.64102458], [-0.1289895, 128.72092643], [-0.12981349, 128.55419639], [-0.0389006341, 120.248496], [-0.0456802793, 119.942943], [-0.0371908416, 118.931826], [-0.0469424204, 118.437965], [-0.0559753359, 124.990308], [-0.0411163187, 121.608315], [-0.0424162544, 123.307796], [-0.0380457674, 122.168983], [-0.0274116866, 117.668156], [-0.0655559037, 126.867065], [-0.158584723, 173.435516], [-0.22631778, 204.21239157], [-0.25112807, 222.70363117], [-0.20363109, 194.54245534], [-0.19350718, 185.75204896], [-0.19230703, 187.18739988], [-0.21025243, 198.09622558], [-0.23033648, 207.97556258], [-0.23257534, 212.33971237], [-0.25086177, 215.83690327], [-0.25849435, 222.00622012], [-0.33219104, 205.35307311], [-0.32294846, 225.37018631], [-0.34067345, 233.67776747], [-0.32968157, 235.35130003], [-0.33207537, 241.94385358], [-0.35041314, 248.68664717], [-0.37232423, 260.18493164], [-0.36478055, 264.2076564], [-0.37566152, 270.44799733], [-0.37059312, 277.16677878], [-0.45694337, 298.31264546], [-0.44614599, 304.17151576]])
popt_right_good_FINAL = np.array([[0.122810996, 128.902051], [0.12820207, 125.15212536], [0.12833865, 128.33572178], [0.13692405, 129.16503209], [0.13348767, 133.18075988], [0.14499491, 132.62681638], [0.1586551, 136.24168707], [0.17374555, 133.68326347], [0.16756466, 148.47624774], [0.144451346, 184.354925], [0.164720332, 165.845788], [0.17161244, 162.29659965], [0.17381077, 157.65306813], [0.17384042, 153.66329233], [0.17943356, 154.11452555], [0.156792834, 157.196361], [0.150872176, 158.282237], [0.14485291, 132.30876681], [0.101836975, 120.250203], [0.0868736933, 108.320807], [0.0561043591, 98.967188], [0.08184988, 81.13346406], [0.08701307, 79.09287535], [0.09508321, 77.60913298], [0.09509742, 77.55824935], [0.08556293, 82.20969354], [0.09348555, 77.45454969], [0.081504805, 83.504424], [0.0686746885, 86.3579444], [0.0756880933, 83.2595495], [0.23129921, 9.02854335], [0.28167282, -15.12792128], [0.1264066, 56.95967722], [0.23933902, 7.26066098], [0.17859746, 34.05015308], [0.20515797, 21.69093623], [0.21311475, 18.45081967], [0.15865113, 41.53977594], [0.1821954, 32.68389287], [0.30915996, -26.36911113], [0.2715977, 26.13192533], [0.17312922, 93.82067406], [0.17577269, 98.23783428], [0.14758688, 97.84372434], [0.1599106, 85.43130846], [0.13460954, 93.7303044], [0.17084878, 87.510876], [0.20322679, 81.04261539], [0.18740947, 93.47274257], [0.16161207, 103.11568862], [0.19898682, 92.58327658], [0.20683488, 73.26839239], [0.14545858, 114.71562445], [0.14740556, 119.19028753], [0.102457565, 135.615241], [0.14494991, 127.66138795], [0.15016022, 128.73922792], [0.16559228, 131.89238057], [0.17464642, 134.84378083], [0.22134519, 126.64952114], [0.20124014, 138.70880977], [0.22674663, 136.38175694], [0.2317289, 151.73355736]])

image_name_good = ['100049163.jpg', '100482507.jpg', '100982494.jpg', '101449184.jpg', '101915820.jpg', '102382486.jpg', '102849149.jpg', '103315832.jpg', '103782482.jpg', '104215805.jpg', '104682471.jpg', '105149136.jpg', '105615793.jpg', '106049124.jpg', '106515776.jpg', '106949116.jpg', '107415764.jpg', '107882434.jpg', '108349084.jpg', '108815749.jpg', '109282416.jpg', '109749075.jpg', '110182409.jpg', '110649074.jpg', '111115735.jpg', '111549065.jpg', '112015728.jpg', '112515718.jpg', '112949055.jpg', '113449057.jpg', '61749486.jpg', '62216131.jpg', '62682793.jpg', '63116128.jpg', '63582791.jpg', '64016121.jpg', '64482790.jpg', '64949444.jpg', '65416095.jpg', '65882759.jpg', '66349421.jpg', '66849432.jpg', '67316096.jpg', '67782767.jpg', '68249423.jpg', '68716091.jpg', '69182748.jpg', '69616081.jpg', '70082741.jpg', '70582738.jpg', '71016067.jpg', '71482721.jpg', '71949399.jpg', '72482714.jpg', '72949406.jpg', '73382713.jpg', '73882714.jpg', '74349374.jpg', '74849368.jpg', '75316029.jpg', '75816027.jpg', '76282685.jpg', '76749356.jpg', '77249352.jpg']
image_name_bad = ['60849474.jpg', '61316162.jpg']

'''